scalaVersion in ThisBuild := "2.12.12"

lazy val generateSources = taskKey[Unit]("generateSources")

val cats = "org.typelevel" %% "cats-core" % "2.0.0"
val scalaXml = "org.scala-lang.modules" %% "scala-xml" % "1.2.0"
val kantanXPath = "com.nrinaudo" %% "kantan.xpath" % "0.5.1"
val kantanXPathJava8 = "com.nrinaudo" %% "kantan.xpath-java8" % "0.5.1"

val nsdScalagenOptions = XsdScalagenOptions(
  packageName = Option("types.nsd"),
  imports = List(
    XsdScalagenImport("scala.xml._"),
    XsdScalagenImport("cats._"),
    XsdScalagenImport("cats.implicits._"),
    XsdScalagenImport("types._"),
    XsdScalagenImport("kantan.xpath.{NodeDecoder, codecs, Query}"),
    XsdScalagenImport("kantan.xpath.implicits._"),
    XsdScalagenImport("kantan.codecs.strings.StringDecoder"),
    XsdScalagenImport("org.w3c.dom.Element")
  ),
  types = List(
    XsdScalagenType("xsd:date", "String"),
    XsdScalagenType("xsd:time", "String"),
    XsdScalagenType("xsd:dateTime", "String"),
    XsdScalagenType("xsd:anyType", "MeetingNotificationExtension")
  ),
  header = Option("/* This file is autogenerated. DO NOT EDIT! */"),
  parameters = XsdScalagenParameters(
    generateComments = true,
    generateXmlSerializers = true,
    generateKantanXPathDecoders = true,
    generateOptionalTypes = XsdScalagenOptionalTypes.No
  )
)

val fesIdentificationScalagenOptions = XsdScalagenOptions(
  packageName = Option("types.fes"),
  imports = List(
    XsdScalagenImport("cats.implicits._"),
    XsdScalagenImport("scala.xml._"),
    XsdScalagenImport("kantan.xpath.{NodeDecoder, codecs, Query}"),
    XsdScalagenImport("kantan.xpath.implicits._"),
    XsdScalagenImport("kantan.xpath.java8._"),
    XsdScalagenImport("kantan.codecs.strings.StringDecoder")
  ),
  header = Option("/* This file is autogenerated. DO NOT EDIT! */"),
  parameters = XsdScalagenParameters(
    generateComments = true,
    generateXmlSerializers = true,
    generateKantanXPathDecoders = true,
    generateOptionalTypes = XsdScalagenOptionalTypes.No
  )
)

lazy val root = project.in(file("."))
  .enablePlugins(SculptorScalagenPlugin)
  .settings(
    version := "0.0.1",

    libraryDependencies ++= Seq(
      cats, scalaXml, kantanXPath, kantanXPathJava8
    ),

    scalacOptions ++= Seq(
      "-Ypartial-unification"
    ),

    xsdScalagenConfigurations := Seq(
      XsdScalagenConfig(
        file("xsd") / "fes-additional-identification-1.0.xsd",
        file("src") / "main/scala/types/fes-additional-identification-1.0.scala",
        fesIdentificationScalagenOptions
      ),
      XsdScalagenConfig(
        file("xsd") / "nrd-documents-2020-08-17.xsd",
        file("src") / "main/scala/types/nrd-documents-2020-08-17.scala",
        nsdScalagenOptions
      )
    ),

    generateSources := {
      xsdScalagenGenerate.value
    },

    compile.in(Compile) := compile.in(Compile).dependsOn(generateSources).value

  )
